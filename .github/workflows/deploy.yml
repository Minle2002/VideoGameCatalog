name: deploy

on:
    workflow_run:
        workflows: [test]
        types: [completed]
        branches: [main]

jobs:
    on-success:
        runs-on: ubuntu-latest
        if: ${{ github.event.workflow_run.conclusion == 'success' }}
        steps:
            - uses: actions/checkout@v2
            - name: Install dependencies
              run: |
                python -m pip install --upgrade pip
                pip install -r requirements.txt
      
            - name: Prepare Flask
              run: |
                flask translations compile

            - name: Congifure AWS Credentials
              uses: aws-actions/configure-aws-credentials@v2
              with:
                aws-access-key-id: ${{ secrets.ACCESS_KEY_ID }}
                aws-secret-access-key: ${{ secrets.SECRET_ACCESS_KEY }}
                aws-region: "us-east-2" 

            - name: Upload application file to AWS
              run: aws s3 cp flask_deploy-${{github.sha}}.zip s3://terraform-state-videogamecatalog-minle2002

            - name: Create new application version
              run: |  
                aws elasticbeanstalk create-application-version \
                --application-name flask \
                --source-bundle S3Bucket="terraform-state-videogamecatalog-minle2002",S3Key="flask-${{github.sha}}.zip " \
                --version-label "ver-${{ github.sha }}" \
                --description "commit-sha-${{ github.sha }}"

            - name: Deploy application
              run: aws elasticbeanstalk update-environment --environment-name flask-environment --version-label "ver-${{ github.sha }}"
